import{e as H}from"./index-DUrFSvvd.js";const e="/HanJing_resume_site/assets/japan_travel01-DRTAw78j.png",C="/HanJing_resume_site/assets/japan_travel02-DA4ZB5YJ.png",b="/HanJing_resume_site/assets/japan_travel03-D6oF_NpF.png",I="/HanJing_resume_site/assets/japan_travel04-BsAbLZ62.png",P="/HanJing_resume_site/assets/japan_travel05-C2nanyHf.png",D="/HanJing_resume_site/assets/japan_travel06-Cmg8HoBa.png",v="/HanJing_resume_site/assets/japan_travel07-CcPOCryK.png",k="/HanJing_resume_site/assets/japan_travel08-D-wnSJlr.png",w="/HanJing_resume_site/assets/japan_travel09-CO2fTVSW.png",j="/HanJing_resume_site/assets/japan_travel10-CNq-bEgT.png",T="/HanJing_resume_site/assets/japan_travel11-DTgo1XNY.png",y="/HanJing_resume_site/assets/japan_travel12-x4QntoIM.png",s="/HanJing_resume_site/assets/kumanomori02-CbY4J6Z1.png",L="/HanJing_resume_site/assets/kumanomori01-CMfPz2H1.png",M="/HanJing_resume_site/assets/kumanomori03-BjJQrquZ.png",R="/HanJing_resume_site/assets/kumanomori04-huUtRcwh.png",E="/HanJing_resume_site/assets/kumanomori05-IEzJthra.png",x="/HanJing_resume_site/assets/kumanomori06-lUHuq6oj.png",V="/HanJing_resume_site/assets/kumanomori07-DXW-K7ZT.png",f="/HanJing_resume_site/assets/kumanomori08-DSZqz4xf.png",B="/HanJing_resume_site/assets/kumanomori09-s6vFymGz.png",G="/HanJing_resume_site/assets/kumanomori10-DAK4h3eJ.png",U="/HanJing_resume_site/assets/kumanomori11-C77jGLWd.png",z="/HanJing_resume_site/assets/kumanomori12-D2U87UE9.png",W="/HanJing_resume_site/assets/kumanomori13-oVPHXf8y.png",F="/HanJing_resume_site/assets/kumanomori14-DsfUwSH_.png",O="/HanJing_resume_site/assets/kumanomori15-DeZywikr.png",t="/HanJing_resume_site/assets/web_resume01-D_2rk2xm.png",Z="/HanJing_resume_site/assets/web_resume02-D59MZjS4.png",q="/HanJing_resume_site/assets/web_resume03-BK1CKge9.png",Y="/HanJing_resume_site/assets/web_resume04-cYztaNDC.png",X="/HanJing_resume_site/assets/web_resume05-8aG8DDfQ.png",Q="/HanJing_resume_site/assets/web_resume06-Bpj7THCh.png",N="/HanJing_resume_site/assets/web_resume07-BS3d05rg.png",K="/HanJing_resume_site/assets/web_resume08-CuUHIEjn.png",$="/HanJing_resume_site/assets/web_resume09-CYmzoVrC.png",ee="/HanJing_resume_site/assets/web_resume10-CPS5Mr2z.png",se="/HanJing_resume_site/assets/web_resume11-BjvkJf0B.png",te="/HanJing_resume_site/assets/web_resume12-B8PF7l8X.png",ae="/HanJing_resume_site/assets/web_resume13-DkImxyw7.png",ne="/HanJing_resume_site/assets/web_resume14-B59LlKQZ.png",ie="/HanJing_resume_site/assets/web_resume15-BNWGGekd.png",oe="/HanJing_resume_site/assets/web_resume16-Bx-9XEjH.png",re="/HanJing_resume_site/assets/web_resume17-Dk8SHzUG.png",me="/HanJing_resume_site/assets/web_resume18-DZl96T-e.png",ge="/HanJing_resume_site/assets/web_resume19-ktpDygn-.png",pe="/HanJing_resume_site/assets/web_resume20-CsEYN8JO.png",a="/HanJing_resume_site/assets/weather_app01-CMS1gU3k.png",_e="/HanJing_resume_site/assets/weather_app02-DIFJ4NUt.png",ce="/HanJing_resume_site/assets/weather_app03-BLFor0yL.png",n="/HanJing_resume_site/assets/gemini_chatbot01-juXYpQz-.png",ue="/HanJing_resume_site/assets/gemini_chatbot02-CmFEX1Ij.png",Se="/HanJing_resume_site/assets/gemini_chatbot03-CbmnaAti.png",Je="/HanJing_resume_site/assets/gemini_chatbot04-Zv3I3yVs.png",le="/HanJing_resume_site/assets/gemini_chatbot05-kR8gCWq4.png",de="/HanJing_resume_site/assets/gemini_chatbot06-MvWV2ZyN.png",Ae="/HanJing_resume_site/assets/gemini_chatbot07-Bo_TC2Re.png",he="/HanJing_resume_site/assets/gemini_chatbot08-B5sYD3Ti.png",i="/HanJing_resume_site/assets/typing_speed_test_game01-CqQzCnM0.png",He="/HanJing_resume_site/assets/typing_speed_test_game02-Lp8sPAJY.png",Ce="/HanJing_resume_site/assets/typing_speed_test_game03-5jsGC2Li.png",o="/HanJing_resume_site/assets/memory_game01-K4BLgwQS.png",be="/HanJing_resume_site/assets/memory_game02-BShjGPf9.png",Ie="/HanJing_resume_site/assets/memory_game03-CMYRYfk0.png",r="/HanJing_resume_site/assets/ai_image_generator01-BZAC8mis.png",Pe="/HanJing_resume_site/assets/ai_image_generator02-Ddz4Wi09.png",De="/HanJing_resume_site/assets/ai_image_generator03-gWA1iV4N.png",m="/HanJing_resume_site/assets/image_editor01-CaCnJ-aF.png",ve="/HanJing_resume_site/assets/image_editor02-DGYHmKn-.png",ke="/HanJing_resume_site/assets/image_editor03-CPnJWWvm.png",we="/HanJing_resume_site/assets/image_editor04-q0E2RQRr.png",je="/HanJing_resume_site/assets/image_editor05-CXPFBjnU.png",g="/HanJing_resume_site/assets/currency_converter_app01-CbS9Hwi8.png",Te="/HanJing_resume_site/assets/currency_converter_app02-BXziWFCc.png",p="/HanJing_resume_site/assets/tic_tac_toe_game01-DXw4mAB8.png",ye="/HanJing_resume_site/assets/tic_tac_toe_game02-B1dQZMhM.png",Le="/HanJing_resume_site/assets/tic_tac_toe_game03-CrLBTFgV.png",Me="/HanJing_resume_site/assets/tic_tac_toe_game04-BQojEFsX.png",_="/HanJing_resume_site/assets/quiz_app01-C038JJwI.png",Re="/HanJing_resume_site/assets/quiz_app02-wP9lz-Y7.png",Ee="/HanJing_resume_site/assets/quiz_app03-1UWWfjVX.png",xe="/HanJing_resume_site/assets/quiz_app04-DVgOiMtA.png",Ve="/HanJing_resume_site/assets/quiz_app05-A3PN-CYU.png",c="/HanJing_resume_site/assets/drawing_app01-MwLbtGk0.png",fe="/HanJing_resume_site/assets/drawing_app02-Co5w2dY8.png",u="/HanJing_resume_site/assets/language_translator_app01-DXTPiEgl.png",Be="/HanJing_resume_site/assets/language_translator_app02-DYwdbVlA.png",S="/HanJing_resume_site/assets/chatbot01-DGcRzDR0.png",Ge="/HanJing_resume_site/assets/chatbot02-CzgfP_b9.png",Ue="/HanJing_resume_site/assets/chatbot03-DaSYP0Jk.png",ze="/HanJing_resume_site/assets/chatbot04-CRaH8adH.png",We="/HanJing_resume_site/assets/chatbot05-Ms9BtpmW.png",Fe="/HanJing_resume_site/assets/chatbot06-LoJioFsS.png",J="/HanJing_resume_site/assets/ToDo_List01-DAgR7H87.png",Oe="/HanJing_resume_site/assets/ToDo_List02-CEnR0GyR.png",Ze="/HanJing_resume_site/assets/ToDo_List03-CtJ4aDcr.png",l="/HanJing_resume_site/assets/expense_tracker_app01-DxxZ8zkf.png",qe="/HanJing_resume_site/assets/expense_tracker_app02--bkNiUNM.png",d="/HanJing_resume_site/assets/kaguya01-DJFH_SfG.png",Ye="/HanJing_resume_site/assets/kaguya02-CZ1GPeCm.png",Xe="/HanJing_resume_site/assets/kaguya03-C-cb3jM6.png",Qe="/HanJing_resume_site/assets/kaguya04-C4OZhLCn.png",Ne="/HanJing_resume_site/assets/kaguya05-BfvOQLzW.png",Ke="/HanJing_resume_site/assets/kaguya06-BsjWIZTq.png",$e="/HanJing_resume_site/assets/kaguya07-EsMn_jJU.png",es="/HanJing_resume_site/assets/kaguya08-DYsntfh6.png",ss="/HanJing_resume_site/assets/kaguya09-2ybOZPR6.png",A="/HanJing_resume_site/assets/membership_demo01-Cz-84Cj9.png",ts="/HanJing_resume_site/assets/membership_demo02-ByWRed7m.png",as="/HanJing_resume_site/assets/membership_demo03-xowUh3rT.png",ns="/HanJing_resume_site/assets/membership_demo04-Dsq8dbrL.png",is="/HanJing_resume_site/assets/membership_demo05-DUUwMwfN.png",os="/HanJing_resume_site/assets/membership_demo06-uijcLKAu.png",rs="/HanJing_resume_site/assets/membership_demo07-BzeFrnaj.png",ms="/HanJing_resume_site/assets/membership_demo08-B-PUv48T.png",gs="/HanJing_resume_site/assets/membership_demo09-Bw8WafVH.png",ps="/HanJing_resume_site/assets/membership_demo10-B-24kERP.png",_s="/HanJing_resume_site/assets/membership_demo11-CKjw8JWn.png",cs="/HanJing_resume_site/assets/membership_demo12-BdiGEXgy.png",us="/HanJing_resume_site/assets/membership_demo13-BtsZLSzZ.png",Ss="/HanJing_resume_site/assets/membership_demo14-DzV5V9D1.png",Js="/HanJing_resume_site/assets/membership_demo15-B75Lt2ki.png",h="/HanJing_resume_site/assets/pic_quest01-X0xzyZ12.png",ls="/HanJing_resume_site/assets/pic_quest02-Cj8RmeJ9.png",As=H([{id:3,title:"個人履歷作品集網站",description:"使用 Vue.js 建構的響應式個人履歷網站，整合個人簡介與作品集展示",extendedDescription:"這是我的個人履歷網站專案，想要挑戰自己用 Vue.js 從零開始建構一個完整的作品集。設計上走簡潔專業的路線，選用了舒服的配色搭配，還加入了技能卡片的抽卡互動效果，希望讓瀏覽體驗更有趣一些。功能方面，我實作了專案分類篩選、詳細頁面展示、響應式設計等。技術上使用了 Vue 3 的 Composition API、Vue Router 做頁面路由、還有 Swiper 做圖片輪播。整個專案讓我學到很多關於組件設計、狀態管理，還有如何組織一個中型前端專案的架構。雖然還有很多可以改進的地方，但這個專案讓我對 Vue 生態系統有了更深的理解。",imageUrl:t,images:[t,Z,q,Y,X,Q,N,K,$,ee,se,te,ae,ne,ie,oe,re,me,ge,pe],technologies:["Vue 3","Vue Router","Pinia","Composition API","CSS / SCSS","BoxIcons","Swiper.js","Responsive Design","Vite"],categories:["vue-projects","ui-animation"],date:"2025-05",downloadReadme:"hanjing_resume_readme.md",features:["Vue 3 Composition API 架構","模組化組件設計","動態路由與頁面導航","作品分類篩選功能","響應式圖片輪播","專案詳情頁面","SCSS 樣式管理","技能卡片抽卡互動效果","舒適的配色與視覺設計"]},{id:18,title:"巨人聯名服飾主題購物網站",description:"一個巨人聯名服飾為主題的購物網站DEMO，前後端協作開發的練習專案",extendedDescription:"這個專案是我和後端工程師一起練習協作開發的作品，選了巨人聯名服飾為主題做一個購物網站。我負責前端的部分，用 Vue 3 搭配 Pinia 來管理購物車狀態，後端朋友則用 Laravel 處理 API 和資料庫。透過這次合作，我學到很多前後端整合的眉角，像是怎麼跟後端討論 API 格式、處理非同步請求、錯誤處理等等。功能包含商品展示、搜尋、購物車系統，還有商品的新增編輯功能。雖然整個流程還不算完整，但這次協作讓我體驗到真實開發環境的感覺，學會怎麼跟後端溝通需求，還有前端該如何配合 API 的設計。在技術上我主要練習了 Vue 的組件化開發、狀態管理，以及怎麼用 Axios 串接 API。",imageUrl:d,images:[d,Ye,Xe,Qe,Ne,Ke,$e,es,ss],technologies:["Vue 3","Vue Router","Pinia","CSS / SCSS","Vite","Axios","RESTful API","Boxicons","Frontend-Backend Collaboration"],categories:["fullstack-demo","vue-projects","api-projects"],date:"2025-03",downloadReadme:"kaguya-shopping-readme.md",features:["前後端分離架構","商品展示與詳細頁面","商品搜尋功能","購物車系統（增減商品、選擇尺寸顏色）","商品管理介面","RESTful API 串接","響應式設計","錯誤處理與載入狀態","團隊協作開發經驗","前後端溝通與整合"]},{id:19,title:"會員管理系統DEMO",description:"與後端開發者協作的會員系統專案，負責前端 Vue 開發與 API 串接",extendedDescription:"這是我與後端開發者協作完成的會員系統，我主要負責前端的部分。使用 Vue 3 搭配現代化的開發工具，與後端的 API 進行串接。專案採用前後端分離的架構，我負責處理使用者介面、路由管理、狀態管理和 API 串接。在協作過程中學到很多，像是如何與後端討論 API 規格、錯誤處理的統一、還有前後端的資料格式協調。路由設計上我把功能模組化分類，包含 publicRoutes(公開頁面)、authRoutes(認證相關)、userRoutes(會員功能)等，讓程式碼更好維護。特別在登入持久化這塊，我使用了 js-cookie 庫來管理 token 的儲存，處理自動登入、cookie 過期設定、還有登出時的清除機制等問題。雖然主要專精在前端，但透過這次協作也更了解全端開發的流程，包括如何處理 JWT token、API 的錯誤回應、還有一些安全性的考量。",imageUrl:A,images:[A,ts,as,ns,is,os,rs,ms,gs,ps,_s,cs,us,Ss,Js],technologies:["Vue 3","Vuex","Vue Router","SCSS","Axios","Vite","JWT Authentication","ESLint / Prettier","RESTful API","js-cookie","SessionStorage","Frontend-Backend Collaboration"],categories:["fullstack-demo","vue-projects","api-projects"],date:"2025-04",downloadReadme:"membership-system-readme.md",features:["模組化路由設計 (auth/user/public)","RESTful API 串接","JWT token 身份驗證","Cookie-based 登入持久化","js-cookie 庫整合應用","自動登入與 token 管理","前後端協作開發","響應式界面設計","統一錯誤處理機制","會員註冊與登入流程","使用者資料管理","404 錯誤頁面處理","路由權限控制與重導向","API 資料格式協調"]},{id:2,title:"寵物零食品牌網站",description:"基於純 HTML、SCSS、JavaScript 打造的響應式寵物零食品牌網站，展現溫馨自然的品牌形象",extendedDescription:"這個專案是我想挑戰自己在前端動畫和視覺設計方面的能力。網站以溫馨自然的風格為主軸，希望傳達品牌對寵物的關愛。在設計上，我選用了溫暖的配色和可愛的元素，讓整個網站感覺親近又專業。技術方面，我使用了 HTML、SCSS 和 JavaScript 來建構，特別花時間在動畫效果上 - 像是首頁的打字動畫、按鈕的 hover 效果，還有頁面載入的開場動畫。雖然是靜態網站，但我用 Swiper 做了產品輪播，也整合了 GSAP 來讓動畫更流暢。整個專案讓我學到很多關於使用者體驗設計的眉角，也更了解如何在沒有框架的情況下組織好程式碼。",imageUrl:s,images:[s,L,M,R,E,x,V,f,B,G,U,z,W,F,O],technologies:["HTML5","CSS / SCSS","JavaScript ES6+","Swiper.js","GSAP","Font Awesome","Responsive Design"],categories:["ui-animation"],date:"2024-11",link:"https://kumanomori.store/",features:["語意化 HTML 結構","SCSS 模組化樣式架構（使用 @use 語法）","動畫效果（打字動畫、按鈕特效、開頭動畫）","RWD 響應式設計","Swiper 輪播功能整合","JavaScript 動態載入組件"]},{id:13,title:"網頁畫圖應用",description:"一個用 HTML5 Canvas 和 JavaScript 做的簡單畫圖工具，可以畫線、圖形和用油漆桶填色",extendedDescription:"這是我練習 Canvas API 的專案，想做一個完整的畫圖工具來學習圖形處理。功能包含筆刷畫線、橡皮擦、畫基本圖形（圓形、方形、三角形），還有油漆桶填色和滴管取色功能。技術上主要用 HTML5 Canvas 來處理繪圖，JavaScript 處理使用者互動，還有 SCSS 做介面樣式。最大的挑戰是實作洪水填充演算法來做油漆桶功能，這對我來說真的是一大難題。說實話，我直到最後都沒有完全懂這個演算法的原理，只能透過網上找資料、不斷嘗試和調整，慢慢把功能做出來。處理 ImageData 的像素操作、stack 的邏輯、邊界檢查這些對我來說都很抽象，花了很多時間在 debug。雖然最後功能有做出來，但我知道自己對演算法的理解還不夠深入。另外還學到 EyeDropper API 來做滴管功能，以及透過調色盤選色時會自動記錄到色板中，這樣可以重複使用常用的顏色。還有工具之間的狀態切換管理，像是不同工具的游標樣式、滑桿的啟用狀態等細節。整個過程讓我體會到前端開發不只是畫面，背後還有很多複雜的邏輯和使用者體驗需要考慮。",imageUrl:c,images:[c,fe],technologies:["HTML5 Canvas","JavaScript ES6+","CSS / SCSS","Canvas API","ImageData API"],categories:["tool-apps"],date:"2025-02",link:"https://hanjing1027.github.io/Drawing_App/",features:["筆刷繪圖功能","橡皮擦工具","基本圖形繪製（圓形、方形、三角形）","油漆桶填色（洪水填充演算法）","滴管取色工具","筆刷大小調整","自訂顏色選擇器","畫布清除功能","圖片儲存功能","工具切換管理","模組化程式架構","即時預覽效果"]},{id:5,title:"Google Gemini 聊天機器人",description:"使用 Gemini API 的智能聊天機器人，支援即時對話與訊息編輯功能",extendedDescription:"這是我學習 API 整合時做的一個聊天機器人專案。當時想試試看 Google 的 Gemini API，順便練習前端與 AI 服務的串接。功能上做了基本的對話，但比較特別的是加了訊息編輯功能，可以重新編輯之前送出的問題，然後重新生成回應。還有打字動畫效果，讓 AI 回覆看起來比較自然。介面設計參考了現代聊天應用的樣式，有深色和淺色主題切換。比較用心的地方是加了 localStorage 來保存聊天記錄，重新開啟網頁時對話還在。輸入框會根據內容自動調整高度，還處理了中文輸入法的組字問題。另外也做了一些貼心的功能，像是可以一鍵複製 AI 的回覆內容，對話視窗會自動跟隨到最新的回覆，不用手動滾動。等待 AI 回覆時會有載入動畫，用了漸層色條和旋轉頭像的效果，讓等待過程不會那麼無聊。雖然核心就是 API 呼叫，但在使用體驗上花了不少心思，像是防止重複請求、錯誤處理、還有響應式設計。。",imageUrl:n,images:[n,ue,Se,Je,le,de,Ae,he],technologies:["JavaScript ES6+","Google Gemini API","CSS / SCSS","LocalStorage","Responsive Design","Async/Await","Font Awesome"],categories:["api-projects","tool-apps"],date:"2025-02",link:"https://hanjing1027.github.io/Google_Gemini_Chatbot/",features:["即時 AI 對話功能","訊息編輯與重新生成","打字動畫效果","等待回覆動畫設計","可複製 AI 回覆內容","自動滾動跟隨最新回覆","深色/淺色主題切換","LocalStorage 聊天記錄保存","自適應輸入框高度","中文輸入法支援","防重複請求保護","錯誤處理與狀態管理","響應式設計","預設問題建議","聊天記錄管理（刪除功能）"]},{id:1,title:"日本旅行體驗網站",description:"基於純 HTML、CSS、JavaScript 打造的響應式日本旅遊主題網站，展現現代化 UI 設計與互動體驗",extendedDescription:"這個專案是我想練習基礎前端技術的作品，主題選了自己喜歡的日本旅遊。網站內容包含戶外活動、季節文化、美食介紹等，希望營造出日式的清新感覺。設計上我嘗試用簡潔的版面和舒服的配色，讓閱讀體驗不會太複雜。技術方面使用 HTML、SCSS 和 JavaScript，我特別花時間學習 SCSS 的模組化寫法，還有一些基本的 CSS 動畫。整合了 Font Awesome 圖標來豐富視覺效果。雖然功能不算複雜，但這個專案讓我對前端基礎有更紮實的理解，也學會怎麼規劃一個完整網站的架構。",imageUrl:e,images:[e,C,b,I,P,D,v,k,w,j,T,y],technologies:["HTML5","CSS / SCSS","JavaScript ES6+","Font Awesome","Responsive Design"],categories:["ui-animation"],date:"2024-10",link:"https://hanjing1027.github.io/Japan_Travel/",features:["語意化 HTML 結構","SCSS 模組化樣式架構","JavaScript 動態載入功能","跨裝置響應式設計","CSS 動畫效果"]},{id:20,title:"圖片搜尋與收藏網站",description:"使用原生 JavaScript 和 Pexels API 打造的圖片搜尋平台，支援瀑布流佈局和圖片預覽、下載功能",extendedDescription:"這個專案其實是我想練習處理 API 和版面配置時做的。主要功能就是可以搜尋圖片，然後用瀑布流的方式顯示，覺得不錯的話可以直接下載。技術上我用了 Pexels 的免費 API 來取得圖片資料，用 Masonry.js 做瀑布流排版，還有 lightbox 功能可以放大預覽。比較有挑戰的地方是處理圖片載入的時機，要等圖片都載入完才能正確排版，還有實作分頁載入更多的功能。整個過程讓我對 async/await、DOM 操作更熟悉了。雖然設計不是很華麗，但功能該有的都有，用起來還算順手。",imageUrl:h,images:[h,ls],technologies:["HTML5","JavaScript ES6+","CSS / SCSS","Pexels API","Masonry.js","Async/Await"],categories:["api-projects","tool-apps"],date:"2025-03",link:"https://hanjing1027.github.io/Pic_Quest/",features:["整合 Pexels API 圖片搜尋","Masonry 瀑布流佈局","分頁載入更多功能","Lightbox 圖片預覽","一鍵下載原圖","載入狀態管理","中文輸入法相容","響應式設計"]},{id:9,title:"影像編輯器",description:"一個用 JavaScript 和 Canvas API 製作的網頁版圖片編輯工具，支援基本的濾鏡調整和圖片變形功能",extendedDescription:"這是我練習 Canvas API 和 JavaScript DOM 操作的專案。功能包含亮度、飽和度、灰階、顏色反轉等基本濾鏡調整，還有圖片旋轉和翻轉功能。介面設計得蠻簡潔的，用綠色系作為主色調，搭配 SCSS 來管理樣式。比較用心的地方是加了未儲存提醒功能，避免使用者意外遺失編輯內容。技術上主要是透過 Canvas 來處理圖片渲染和下載，用 CSS filter 屬性做即時預覽效果。雖然功能不如專業軟體複雜，但對我來說是個不錯的 Canvas 和檔案處理練習，也學到怎麼處理使用者體驗的細節。",imageUrl:m,images:[m,ve,ke,we,je],technologies:["HTML5","CSS / SCSS","JavaScript ES6+","Canvas API","File API","Font Awesome","Responsive Design"],categories:["tool-apps"],date:"2025-02",link:"https://hanjing1027.github.io/Image_Editor/",features:["基本濾鏡調整（亮度、飽和度、灰階、顏色反轉）","圖片旋轉和翻轉功能","未儲存變更提醒機制","即時預覽效果","Canvas 圖片處理和下載","響應式設計適配行動裝置","自訂滑桿樣式設計","SCSS 模組化樣式管理"]},{id:12,title:"互動測驗應用程式",description:"一個台灣本土化的測驗系統，包含國文、數學、公民、地理四個科目，讓學習變得更有趣",extendedDescription:"這個專案是我想挑戰做一個完整互動應用的嘗試。選擇測驗系統是因為覺得可以練習到很多前端技巧，像是狀態管理、計時器、動態內容渲染等。特別的是我把所有題目都設計成台灣在地的內容，從注音符號到台灣地理，希望能更貼近本土的學習需求。技術上使用了ES6模組化來管理題庫，SCSS來處理樣式架構，還加入了15秒倒數計時和即時答題回饋。雖然功能看似簡單，但實作過程中學到很多，像是如何避免重複題目、怎麼處理答題狀態、計時器的精準控制等。整個UI設計走簡潔路線，希望讓使用者專注在答題上不會被干擾。",imageUrl:_,images:[_,Re,Ee,xe,Ve],technologies:["HTML5","CSS / SCSS","JavaScript ES6+"],categories:["tool-apps"],date:"2025-02",link:"https://hanjing1027.github.io/Quiz_App/",features:["四大科目題庫系統（國文、數學、公民、地理）","15秒計時答題機制","即時答題回饋與正確答案顯示","自由選擇題數（5-25題）","ES6模組化題庫管理","SCSS巢狀結構樣式管理","響應式界面設計","答題統計與結果分析","防止重複點擊的狀態控制","台灣本土化題目內容"]},{id:8,title:"AI 圖像生成器工具",description:"一個基於 OpenAI DALL-E API 的圖像生成工具，支援中文輸入並自動翻譯",extendedDescription:"這個專案是我想嘗試整合 API 的練習作品。使用者可以用中文描述想要的圖片，系統會自動翻譯成英文後呼叫 OpenAI 的 DALL-E API 來生成圖像。功能蠻基礎的，就是輸入文字描述、選擇要生成幾張圖，然後等 AI 畫出來。我加了一個翻譯功能是因為發現中文 prompt 效果不太好，所以先用免費的翻譯 API 轉成英文再送給 DALL-E。技術上用了 ES6 的 async/await 來處理 API 呼叫，還有一些基本的 DOM 操作。樣式用 SCSS 寫的，有做響應式設計讓手機也能正常使用。雖然功能不複雜，但讓我學到怎麼串接第三方 API 和處理非同步操作。",imageUrl:r,images:[r,Pe,De],technologies:["HTML5","CSS / SCSS","JavaScript ES6+","OpenAI DALL-E API","MyMemory Translation API","Responsive Design"],categories:["api-projects","tool-apps"],date:"2025-02",link:"https://hanjing1027.github.io/AI_Image_Generator/",features:["OpenAI DALL-E API 整合","中文到英文自動翻譯","可選擇生成圖片數量","Base64 圖片顯示與下載","載入狀態視覺回饋","響應式使用者介面","SCSS 模組化樣式","ES6 async/await 非同步處理"]},{id:4,title:"天氣預報查詢網站",description:"使用 JavaScript 和 OpenWeatherMap API 打造的響應式天氣查詢網站",extendedDescription:"這是我練習 API 串接時做的一個天氣查詢專案。主要想學習如何處理非同步請求跟第三方 API 的整合。功能上可以搜尋城市天氣，也支援定位功能自動取得當前位置的天氣資訊。比較用心的地方是做了中英文城市名稱的對應字典，讓使用者可以輸入中文城市名稱，然後程式會自動轉換成 API 需要的英文格式。還加了天氣小貼士功能，會根據不同天氣狀況給出相應的提醒。設計上用了藍色系配色，試著營造天空的感覺。響應式設計也有顧到，在手機上也能正常使用。雖然功能不算複雜，但讓我對 fetch API、Promise 處理、錯誤處理這些有了更實際的理解。",imageUrl:a,images:[a,_e,ce],technologies:["JavaScript ES6+","OpenWeatherMap API","Geolocation API","CSS / SCSS","Responsive Design","Async/Await","Font Awesome"],categories:["api-projects","tool-apps"],date:"2025-02",link:"https://hanjing1027.github.io/Weather_App/",features:["城市天氣查詢功能","當前位置自動定位","5天天氣預報顯示","中英文城市名稱對應字典","智能天氣小貼士","反向地理編碼定位","錯誤處理與狀態管理","響應式設計適配各裝置","模組化程式碼架構"]},{id:16,title:"Vue待辦清單應用",description:"使用 Vue 3 Composition API 開發的簡潔待辦清單，支援分類管理和本地儲存功能",extendedDescription:"這是我學習 Vue 3 時做的練習專案，想要熟悉 Composition API 的寫法。功能很基本，就是新增、刪除和標記完成待辦事項，但我加了分類功能(工作和個人)，還有本地儲存，所以重新整理頁面資料不會消失。介面設計比較簡潔，用了一些 CSS 變數來管理主題色彩，也嘗試了一些基本的 hover 效果。技術上使用 Vite 作為建置工具，配置了 ESLint 和 Prettier 來保持程式碼格式。雖然功能不多，但這個專案讓我對 Vue 3 的響應式系統和生命週期有了更深的理解。",imageUrl:J,images:[J,Oe,Ze],technologies:["Vue 3","Composition API","Vite","CSS","JavaScript ES6+","LocalStorage","ESLint","Prettier"],categories:["vue-projects","tool-apps"],date:"2025-03",link:"https://hanjing1027.github.io/Todo_List-Vue/",features:["Vue 3 Composition API 實作","待辦事項 CRUD 操作","工作/個人分類系統","LocalStorage 資料持久化","即時的完成狀態切換","簡潔的響應式介面","使用者名稱記憶功能","ESLint + Prettier 程式碼規範"]},{id:17,title:"財務記帳管理助手",description:"一個用Vue 3開發的個人財務記帳應用，讓記錄收支變得簡單直覺",extendedDescription:"這是我用Vue 3練習的一個記帳應用，想解決自己平常記錄花費很麻煩的問題。功能很基本但很實用，可以快速記錄收入和支出，會自動計算餘額，還有歷史紀錄可以查看。我用了Vue 3的Composition API來管理狀態，資料會存在localStorage裡，所以重新整理也不會不見。介面設計上盡量保持簡潔，用SCSS來管理樣式，還加了一些基本的響應式設計。雖然功能不算複雜，但透過這個專案我對Vue的響應式系統和組件溝通有了更好的理解，也學會怎麼處理表單驗證和本地儲存。",imageUrl:l,images:[l,qe],technologies:["Vue 3","Composition API","CSS / SCSS","Vite","LocalStorage"],categories:["vue-projects","tool-apps"],date:"2025-03",link:"https://hanjing1027.github.io/Expense_Tracker_App-Vue/",features:["收支記錄快速新增","自動計算收入、支出與餘額","交易歷史紀錄管理","本地儲存資料持久化","響應式介面設計","Vue 3 Composition API"]},{id:14,title:"語言翻譯應用程式",description:"一個簡單實用的多語言翻譯工具，支援 90+ 種語言互譯，整合語音播放和文字複製功能",extendedDescription:"這個專案是我練習前端 API 串接和 DOM 操作的作品。功能蠻基本的，就是把使用者輸入的文字翻譯成其他語言。我使用 MyMemory 翻譯 API 來處理翻譯服務，支援包含繁體中文、英語、日語等 90 多種語言。介面設計得簡潔一點，左右兩個文字區域分別放原文和譯文，中間有個交換按鈕可以快速切換語言方向。額外加了一些實用的小功能，像是文字複製到剪貼板、語音播放（使用瀏覽器內建的 Speech API）。技術上主要用 JavaScript ES6 的 async/await 處理 API 呼叫，CSS 部分用 SCSS 寫樣式管理。雖然不是什麼複雜的應用，但讓我學會怎麼串接第三方 API 和處理非同步操作，也練習了模組化的程式碼組織方式。",imageUrl:u,images:[u,Be],technologies:["HTML5","CSS / SCSS","JavaScript ES6+","MyMemory API","Web Speech API","Boxicons"],categories:["api-projects","tool-apps"],date:"2025-02",link:"https://hanjing1027.github.io/Language_Translator_App/",features:["支援 90+ 種語言翻譯","MyMemory API 翻譯服務整合","語音播放功能（Web Speech API）","一鍵複製翻譯結果","語言快速交換功能","SCSS 模組化樣式管理","非同步 API 處理","ES6 模組化程式碼架構","簡潔直覺的使用介面","錯誤處理機制"]},{id:15,title:"簡化版 AI 聊天應用",description:"使用 Gemini API 的簡單聊天機器人，練習 API 串接和基礎前端互動",extendedDescription:"這是我剛開始學習 API 串接時做的練習專案，想試試看怎麼跟 Google 的 Gemini API 對話。功能很基本，就是發送訊息然後收到 AI 回覆，但對當時的我來說已經很有成就感了。介面設計模仿了常見的聊天軟體，有浮動視窗和對話泡泡的樣式。比較用心處理的是中文輸入法的問題，因為一開始會發生按 Enter 就送出但字還沒打完的狀況。還有加了簡單的錯誤處理，萬一 API 出問題時會顯示友善的錯誤訊息。雖然沒有很複雜的功能，但透過這個專案我學會了 async/await、fetch API 的用法，還有怎麼動態操作 DOM。對話框會自動滾動到最新訊息，輸入框也能根據內容調整高度。",imageUrl:S,images:[S,Ge,Ue,ze,We,Fe],technologies:["HTML5","JavaScript ES6+","CSS / SCSS","Google Gemini API","BoxIcons","Async/Await","Responsive Design"],categories:["api-projects","tool-apps"],date:"2025-02",link:"https://hanjing1027.github.io/Chatbot/",features:["基本 AI 對話功能","浮動聊天視窗","對話泡泡設計","中文輸入法支援","錯誤處理機制","自動滾動到最新訊息","自適應輸入框高度","SCSS 模組化樣式","響應式設計（手機版全螢幕）","載入狀態顯示","簡潔的使用者介面"]},{id:10,title:"貨幣轉換器應用",description:"一個簡單實用的貨幣轉換工具，練習串接 API 和基礎前端互動功能",extendedDescription:"這是我學習前端開發時做的一個小專案，主要想練習怎麼串接真實的 API 和處理使用者互動。功能很直觀，就是選擇兩種貨幣然後輸入金額來看匯率轉換結果。我使用了 ExchangeRate-API 來取得即時匯率資料，搭配國旗 API 讓介面看起來更生動一些。設計上保持簡潔，用了柔和的藍灰色調讓人感覺舒服。技術方面用 HTML、SCSS 和原生 JavaScript，特別練習了 async/await 處理非同步請求和基本的錯誤處理。雖然功能不複雜，但讓我學會了怎麼整合外部 API、處理使用者輸入驗證，還有怎麼讓程式碼更好維護。",imageUrl:g,images:[g,Te],technologies:["HTML5","CSS / SCSS","JavaScript ES6+","ExchangeRate API","Flags API","Fetch API"],categories:["api-projects","tool-apps"],date:"2025-02",link:"https://hanjing1027.github.io/Currency_Converter_App/",features:["即時匯率查詢功能","支援多種國際貨幣","國旗圖示視覺化顯示","貨幣快速交換功能","輸入金額驗證機制","簡潔直觀的使用介面","SCSS 模組化樣式管理","錯誤處理和載入狀態"]},{id:11,title:"井字遊戲",description:"一個用原生 JavaScript 實作的井字遊戲，有簡單和困難兩種 AI 對戰模式",extendedDescription:"這是我練習 JavaScript 基礎邏輯的專案，想試試看能不能做出一個還算有趣的井字遊戲。遊戲流程蠻完整的，玩家可以選擇當 X 或 O，然後選擇要挑戰簡單還是困難的 AI。簡單模式的 AI 就是隨機選位置，困難模式會稍微聰明一點，會想辦法阻止你獲勝或找機會自己贏。寫這個專案讓我學到不少東西，像是怎麼管理遊戲狀態、設計回合制邏輯、還有實作基本的 AI 演算法。雖然 AI 不算很厲害，但對我來說是很棒的練習。樣式方面用了 SCSS 來管理，界面設計得簡潔一些，主要專注在功能的實現上。整個專案沒有用任何框架，就是純 HTML、CSS 和 JavaScript，這樣可以更扎實地理解基礎概念。",imageUrl:p,images:[p,ye,Le,Me],technologies:["HTML5","CSS3 / SCSS","JavaScript ES6+","Font Awesome","DOM"],categories:["tool-apps"],date:"2025-02",link:"https://hanjing1027.github.io/Tic_Tac_Toe_Game/",features:["玩家可選擇 X 或 O 符號","兩種 AI 難度模式","完整的勝負判定邏輯","平局檢測機制","回合制遊戲流程","遊戲狀態管理","SCSS 模組化樣式","響應式界面設計","可重複遊玩機制"]},{id:6,title:"打字速度測試遊戲",description:"用原生 JavaScript 做的打字練習小遊戲，可以測試打字速度和準確度",extendedDescription:"這是我練習 JavaScript 時做的一個打字測試小遊戲。功能很簡單，就是隨機顯示一段英文，然後計算你的打字速度和錯誤率。遊戲會即時顯示你打對打錯的字，還有一個閃爍的游標跟著你的輸入移動。技術上用了原生 JS 處理所有邏輯，SCSS 管理樣式。雖然只是個小專案，但讓我練習了 DOM 操作、事件處理、計時器這些基礎概念。介面設計得很簡潔，就是希望使用者能專注在打字練習上。做完這個專案讓我對 JavaScript 的基本操作更熟悉了。",imageUrl:i,images:[i,He,Ce],technologies:["HTML5","JavaScript ES6+","CSS / SCSS","DOM"],categories:["tool-apps"],date:"2025-02",link:"https://hanjing1027.github.io/Typing_Speed_Test_Game/",features:["隨機英文段落選擇","即時打字準確度檢查","WPM 和 CPM 速度計算","錯誤次數統計","60秒倒數計時","視覺化游標追蹤","重新開始功能","響應式介面設計"]},{id:7,title:"記憶翻牌遊戲",description:"用純 JavaScript 做的記憶力小遊戲，練習基本的DOM操作和邏輯設計",extendedDescription:"這是我練習 JavaScript 基礎語法的小專案，想說做個簡單的記憶遊戲來熟悉DOM操作。遊戲規則很簡單，就是翻牌配對，40秒內全部配對完成就算成功。程式裡我嘗試寫了洗牌演算法、計時器功能、還有防止連點的機制。雖然功能不複雜，但對我來說是很好的練習，學會怎麼用事件監聽處理使用者互動，還有如何管理遊戲狀態。介面用了 Font Awesome 的圖標，讓卡片看起來比較有趣。整個專案讓我對 JavaScript 的基本概念更熟悉，也學會怎麼把想法轉換成實際的程式碼。",imageUrl:o,images:[o,be,Ie],technologies:["HTML5","CSS / SCSS","JavaScript ES6+","Font Awesome"],categories:["tool-apps"],date:"2025-01",link:"https://hanjing1027.github.io/Memory_Game/",features:["12張卡片的記憶配對遊戲","40秒倒數計時挑戰","洗牌演算法打亂卡片順序","翻牌次數統計功能","防連點機制避免作弊","遊戲結果彈窗顯示","重新開始遊戲功能","簡潔的遊戲介面設計"]}]),hs=[{id:"tool-apps",name:"工具型小應用"},{id:"api-projects",name:"API 整合應用"},{id:"vue-projects",name:"Vue 應用開發"},{id:"ui-animation",name:"介面與動畫練習"},{id:"fullstack-demo",name:"前後端交互"}];export{As as a,hs as w};
